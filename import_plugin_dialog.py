# -*- coding: utf-8 -*-
"""
/***************************************************************************

                       EING GML import/export plugin

 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2024-11-20
        copyright            : (C) 2024 by Tigra Kft.
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt.QtWidgets import QDialog, QMessageBox

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'import_plugin_dialog_base.ui'))


class ImportDialog(QDialog, FORM_CLASS):
    """ Dialog to specify input gml file and output GeoPackage """

    def __init__(self, tr, parent=None):
        """Constructor."""
        super(ImportDialog, self).__init__(parent)
        self.tr = tr
        self.setupUi(self)

        self.import_gml_path.fileChanged.connect(self.import_gml_path_changed)

        # Connect custum accept method
        self.button_box.accepted.disconnect(self.accept)
        self.button_box.accepted.connect(self.accept_import)

    def import_gml_path_changed(self):
        """ update gpkg field """
        self.import_gpkg_path.setFilePath(self.import_gml_path.filePath().replace(".gml", ".gpkg"))

    def accept_import(self):
        """ Custom accept method to check fields """
        if len(self.import_gpkg_path.filePath()) == 0 or \
           len(self.import_gml_path.filePath()) == 0:
            QMessageBox.critical(None, self.tr("Empty field"),
                                 self.tr("Fill both fields"))
            return
        if not os.path.exists(self.import_gml_path.filePath()):
            QMessageBox.critical(None, self.tr("Misisng file"),
                                 self.tr("GML file does not exist"))
            return
        if os.path.exists(self.import_gpkg_path.filePath()):
            ans = QMessageBox.question(None, self.tr("Existing file"),
                                 self.tr("GeoPackage already exists, overwrite?"))
            if ans == QMessageBox.No:
                return
        self.accept()
